# 应用服务 WEB 访问端口
server.port=8088

# tomcat编码字符集，设置为UTF-8避免中文乱码
server.tomcat.uri-encoding=UTF-8

# 设置数据库相关的配置
# 1.设置mysql驱动（对mysql进行一个注册）
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
# 2.设置mysql的url，参数：useUnicode-是否使用uniCode编码；characterEncoding-使用什么编码字符集；useSSL-关闭SSL验证；allowPublicKeyRetrieval=true-允许公钥检索用户密码
spring.datasource.url=jdbc:mysql://localhost:3306/community_db?useUnicode=true&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
# 3.设置mysql用户名和密码
spring.datasource.username=root
spring.datasource.password=123456

# 数据库连接池相关
# 1.连接池类型
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
# 2.设置连接池初始化连接数量
spring.datasource.druid.initial-size=3
# 3.连接池的连接最大活动数
spring.datasource.druid.max-active=20
# 4.最大等待时间(ms)，当连接池的资源达到上限时，超过指定时间仍未获得连接，将抛出 SQLException（异常消息通常为"wait millis timeout"）
spring.datasource.druid.max-wait=60000
# 5.最小空闲数，应用低峰使用期时，释放掉连接池的资源，保留一部分的连接池资源
spring.datasource.druid.min-idle=3

# mybatis-plus相关配置
# 1.获取xml文件路径，classpath默认就是resources的地址
mybatis-plus.mapper-locations=classpath:/mapper/*.xml
# 2.关闭缓存，好处：查询结果会存储在缓存中，下次查找更快。坏处：数据表更新之后，缓存可能不会及时同步。
mybatis-plus.configuration.cache-enabled=false
# 3.字段下划线转驼峰格式，自动将mysql中的column名(如果有下划线)转换为java实体类(小驼峰)
mybatis-plus.configuration.map-underscore-to-camel-case=true
# 4.默认主键字段类型自动递增
mybatis-plus.global-config.db-config.id-type=auto
# 5.做insert操作时忽略空字段
mybatis-plus.global-config.db-config.insert-strategy=not_empty
# 6.做查询时忽略空字段
mybatis-plus.global-config.db-config.select-strategy=not_empty
# 7.做更新时忽略空字段
mybatis-plus.global-config.db-config.update-strategy=not_empty